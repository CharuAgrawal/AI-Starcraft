use Hatchery as knowledge.
use Hatchery as actionspec.

module Hatchery {
%	if a-goal(unitAmount("Zerg Lair", Amount)), bel(friendly("Zerg Spawning Pool", _ , _, _) , minerals(X) , cost("Zerg Lair", M,G), X> M , gas(V), V > G) then upgrade("Zerg Lair").
	
	% If goal to make a drone and have enough minerals, start training a drone
	if a-goal(unitAmount("Zerg Drone", Amount)),bel( minerals(X), X >= 50, supply(CS, TS), (TS - CS) > 1) then train("Zerg Drone").
	
	% If goal to make an overlord and have enough minerals, start training an overlord
	if a-goal(unitAmount("Zerg Overlord", Amount)), bel(not(isMorphing("Zerg Overlord", _)), minerals(X), X >= 100) then train("Zerg Overlord").
	
	% If goal to make a queen and have enough minerals, start training a queen.
	%if a-goal(unitAmount("Zerg Queen", Amount)),bel(minerals(X), X >= 150, supply(CS, TS), (TS - CS) >2) then train("Zerg Queen").	
	
	% If goal to make a zergling and have enough minerals, start training a zergling.
	if a-goal(unitAmount("Zerg Zergling", Amount)),bel(minerals(X), X >= 50, supply(CS, TS), (TS - CS) >1) then train("Zerg Zergling").
	
	
}